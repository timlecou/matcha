version: "3"

services:
  back:
    ports:
      - 4000:4000
    build: ./back/
    container_name: website-back
    restart: always
    volumes:
      - ./back/src:/usr/src/app/src
      - ./back/uploads:/usr/src/app/uploads
    environment:
      PORT: 4000
      PGHOST: website-db
      PGUSER: db_user
      PGPASSWORD: db_password
      PGDATABASE: matcha
      PGPORT: 5432
    env_file:
      - ./back/.env
    command: "npm run start:dev"
    depends_on:
      - db

  front:
    ports:
      - 3000:3000
    build: ./front/
    container_name: website-front
    restart: always
    volumes:
      - ./front/components:/usr/src/app/components
      - ./front/layouts:/usr/src/app/layouts
      - ./front/pages:/usr/src/app/pages
      - ./front/store:/usr/src/app/store
      - ./front/services:/usr/src/app/services
      - ./front/assets:/usr/src/app/assets
      - ./back/src/uploads:/usr/src/app/assets/uploads
    environment:
      PORT: 3000
      BACK_URI: "/api"
    command: "npm run dev"
    depends_on:
      - back
    
  db:
    container_name: website-db
    image: postgres:latest
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: matcha
    volumes:
     - ./postgres/dbdata:/var/lib/postgresql/data
     - ./postgres/db.sql:/docker-entrypoint-initdb.d/db.sql

  phppgadmin:
    container_name: phppgadmin
    image: neimheadh/phppgadmin:7.13.0
    ports:
      - 1234:80
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=db_user
      - POSTGRES_PASS=db_password
    depends_on:
      - db